{"version":3,"sources":["component/menu-item/index.js","component/menu-item/MenuItem.jsx","component/header/index.js","component/header/Header.jsx","component/recipe-card/index.js","component/recipe-card/RecipeCard.jsx","component/custom-button/index.js","component/custom-button/CustomButton.jsx","component/helpers/helpers.js","component/random-recipe/index.js","component/random-recipe/RandomRecipe.jsx","assets/images/mock-recipe-img.jpg","component/add-custom-recipe/index.js","component/add-custom-recipe/AddCustomRecipe.jsx","component/favorite-recipe/index.js","component/favorite-recipe/FavoriteRecipes.jsx","component/app/index.js","component/app/App.jsx","index.js"],"names":["MenuItem","props","id","path","menuItemName","className","to","exact","activeClassName","Header","RecipeCard","idMeal","strMeal","strMealThumb","strInstructions","src","alt","CustomButton","onClick","handleClick","buttonClassName","children","storage","window","localStorage","handleChange","event","setter","target","value","isEmpty","key","getItem","RandomRecipe","useState","state","setState","meal","JSON","parse","length","renderRecipe","localState","preventDefault","fetch","then","res","json","obj","meals","getRandomRecipe","tempArr","setItem","stringify","temp","push","saveRecipeToLocalStorage","AddCustomRecipe","trigger","setTrigger","FavoriteRecipes","text","setText","input","setInput","popupFlag","setPopupFlag","cardsRecipe","map","type","placeholder","onChange","name","cols","rows","min","max","Math","round","random","mock_img","App","console","log","basename","process","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ab2bd08f.chunk.js","sourcesContent":["import MenuItem from \"./MenuItem\";\r\n\r\nexport default MenuItem;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport './menu-item.scss';\r\n\r\nconst MenuItem = props => {\r\n\r\n    const {\r\n        id,\r\n        path,\r\n        menuItemName\r\n    } = props;\r\n\r\n    return (\r\n        <li key={ id } className='nav-item'>\r\n            <NavLink\r\n                to={`/${ path }`}\r\n                exact\r\n                activeClassName='active-recipe'\r\n                className='item'\r\n            >\r\n                { menuItemName }\r\n            </NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default MenuItem;","import Header from \"./Header\";\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './header.scss';\r\nimport MenuItem from \"../menu-item\";\r\n\r\nconst Header = () => {\r\n\r\n    return(\r\n        <header className=\"header\">\r\n\r\n            <nav className='nav'>\r\n                <MenuItem\r\n                    key='1'\r\n                    path=''\r\n                    menuItemName='Random dish'\r\n                />\r\n\r\n                <MenuItem\r\n                    key='2'\r\n                    path='favorite'\r\n                    menuItemName='Favorites'\r\n                />\r\n            </nav>\r\n\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import RecipeCard from \"./RecipeCard\";\r\n\r\nexport default RecipeCard;","import React from 'react';\r\n\r\nimport './recipe-card.scss'\r\n\r\nconst RecipeCard = props => {\r\n\r\n    const {\r\n        idMeal,\r\n        strMeal,\r\n        strMealThumb,\r\n        strInstructions\r\n    } = props;\r\n\r\n    return (\r\n        <div className='recipe-card' key={ idMeal }>\r\n            <img\r\n                src={ strMealThumb }\r\n                alt={ strMeal }\r\n                className='recipe-img'\r\n            />\r\n            <div className='card-info'>\r\n                <h2 className='recipe-name'>\r\n                    { strMeal }\r\n                </h2>\r\n                <p className='recipe-description'>\r\n                    { strInstructions }\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RecipeCard;\r\n\r\n\r\n\r\n","import CustomButton from \"./CustomButton\";\r\n\r\nexport default CustomButton;","import React from 'react';\r\n\r\nimport './custom-button.scss';\r\n\r\nconst CustomButton = props => {\r\n\r\n    return (\r\n        <button\r\n            onClick={props.handleClick}\r\n            className={props.buttonClassName}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default CustomButton;\r\n","export let storage = window.localStorage;\r\n\r\nexport const handleChange = (event, setter) => {\r\n    setter(event.target.value);\r\n};\r\n\r\nexport const randomID = (min, max) => {\r\n    return Math.round(min - 0.5 + Math.random() * (max - min + 1));\r\n};\r\n\r\nexport const isEmpty = key => !storage.getItem(key) ? false : true;\r\n\r\nexport const saveRecipeToLocalStorage = (event, localState) => {\r\n    event.preventDefault();\r\n    if (!storage.getItem('meal')) {\r\n        let temp = [];\r\n        temp.push(localState);\r\n        storage.setItem('meal', JSON.stringify(temp));\r\n    } else {\r\n        let tempArr = [...JSON.parse(storage.meal), localState];\r\n        storage.setItem(\"meal\", JSON.stringify(tempArr));\r\n    }\r\n};\r\n\r\nexport const getRandomRecipe = (event, localState) => {\r\n    event.preventDefault();\r\n    const apiSrc = \"https://www.themealdb.com/api/json/v1/1/random.php\";\r\n    fetch(apiSrc)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            let obj = {\r\n                idMeal: res.meals[0].idMeal,\r\n                strMeal: res.meals[0].strMeal,\r\n                strMealThumb: res.meals[0].strMealThumb,\r\n                strInstructions: res.meals[0].strInstructions,\r\n            };\r\n            localState(obj);\r\n        });\r\n};","import RandomRecipe from \"./RandomRecipe\";\r\n\r\nexport default RandomRecipe;","import React, { useState } from 'react';\r\n\r\nimport './random-recipe.scss';\r\nimport RecipeCard from \"../recipe-card\";\r\nimport CustomButton from \"../custom-button\";\r\nimport {\r\n    isEmpty,\r\n    storage,\r\n    getRandomRecipe,\r\n    saveRecipeToLocalStorage\r\n} from \"../helpers/helpers\";\r\n\r\nconst RandomRecipe = props => {\r\n    const [state, setState ] = useState([]);\r\n\r\n    const renderRecipe = () => {\r\n        const meal = JSON.parse(storage.meal);\r\n        if (state.length === 0 && isEmpty('meal')) {\r\n            return (\r\n                <RecipeCard\r\n                    key={meal[0].idMeal}\r\n                    strMeal={meal[0].strMeal}\r\n                    strMealThumb={meal[0].strMealThumb}\r\n                    strInstructions={meal[0].strInstructions}\r\n                />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <RecipeCard\r\n                key={state.idMeal}\r\n                strMeal={state.strMeal}\r\n                strMealThumb={state.strMealThumb}\r\n                strInstructions={state.strInstructions}\r\n            />\r\n        )\r\n\r\n    };\r\n\r\n    return (\r\n        <div className='random-card'>\r\n\r\n            { renderRecipe() }\r\n\r\n            <div className=\"buttons\">\r\n                <CustomButton\r\n                    buttonClassName='card-btn'\r\n                    handleClick={(event) => getRandomRecipe(event, setState)}\r\n                >\r\n                    Skip\r\n                </CustomButton>\r\n\r\n                <CustomButton\r\n                    buttonClassName='card-btn'\r\n                    handleClick={(event) => saveRecipeToLocalStorage(event, state)}\r\n                >\r\n                    Like\r\n                </CustomButton>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RandomRecipe;","export default __webpack_public_path__ + \"static/media/mock-recipe-img.28e38134.jpg\";","import AddCustomRecipe from \"./AddCustomRecipe\";\r\n\r\nexport default AddCustomRecipe;","import React from 'react';\r\n\r\nimport './add-custom-recipe.scss';\r\n\r\nconst AddCustomRecipe = props => {\r\n\r\n    return (props.trigger) ? (\r\n        <div className='add-custom-recipe-form'>\r\n            <div className='custom-recipe-inner'>\r\n                <button\r\n                    className='close-btn'\r\n                    onClick={() => props.setTrigger(false)}\r\n                >\r\n                    &#215;\r\n                </button>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    ) : ''\r\n};\r\n\r\nexport default AddCustomRecipe;","import FavoriteRecipes from \"./FavoriteRecipes\";\r\n\r\nexport default FavoriteRecipes;","import React, { useState } from 'react';\r\nimport './favorite-recipe.scss';\r\nimport mock_img from '../../assets/images/mock-recipe-img.jpg'\r\n\r\nimport RecipeCard from \"../recipe-card\";\r\nimport AddCustomRecipe from \"../add-custom-recipe\";\r\nimport CustomButton from \"../custom-button\";\r\nimport {\r\n    storage,\r\n    randomID,\r\n    handleChange\r\n} from \"../helpers/helpers\";\r\n\r\n\r\nconst FavoriteRecipes = () => {\r\n    const [ text, setText ] = useState('');\r\n    const [ input, setInput ] = useState('');\r\n    const [ popupFlag, setPopupFlag ] = useState(false);\r\n\r\n    const cardsRecipe = JSON.parse(storage.meal)\r\n        .map(meal => {\r\n            const {\r\n                idMeal,\r\n                strMeal,\r\n                strMealThumb,\r\n                strInstructions\r\n            } = meal;\r\n\r\n            return (\r\n                <RecipeCard\r\n                    key={idMeal}\r\n                    strMeal={strMeal}\r\n                    strMealThumb={strMealThumb}\r\n                    strInstructions={strInstructions}\r\n                />\r\n            )\r\n        });\r\n\r\n    const saveRecipeToLocalStorage = event => {\r\n        event.preventDefault();\r\n        let obj = {\r\n            idMeal: `${randomID(1, 9999)}`,\r\n            strMeal: input,\r\n            strMealThumb: mock_img,\r\n            strInstructions: text\r\n        };\r\n        let tempArr = [...JSON.parse(storage.meal), obj];\r\n        storage.setItem(\"meal\", JSON.stringify(tempArr));\r\n        setPopupFlag(false);\r\n    };\r\n\r\n    return (\r\n        <div className='favorite-card'>\r\n\r\n            <div className='add-custom-recipe'>\r\n                <CustomButton\r\n                    buttonClassName='card-btn card-position size'\r\n                    handleClick={() => setPopupFlag(true)}\r\n                >\r\n                    Add custom dish\r\n                </CustomButton>\r\n\r\n                <AddCustomRecipe\r\n                    trigger={popupFlag}\r\n                    setTrigger={setPopupFlag}\r\n                >\r\n                    <h3>Add custom dish</h3>\r\n                    <form className='custom-dish_form'>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder='Dish title'\r\n                            className='custom-dish_input'\r\n                            onChange={(event) => handleChange(event, setInput)}\r\n                        />\r\n                        <textarea\r\n                            className='custom-dish_text-field'\r\n                            name=\"dish description\"\r\n                            cols=\"30\"\r\n                            rows=\"10\"\r\n                            placeholder='Dish description...'\r\n                            onChange={event => handleChange(event, setText)}\r\n                        >\r\n\r\n                        </textarea>\r\n\r\n                        <CustomButton\r\n                            buttonClassName='card-btn'\r\n                            handleClick={event => saveRecipeToLocalStorage(event)}\r\n                        >\r\n                            Add custom dish\r\n                        </CustomButton>\r\n\r\n                    </form>\r\n                </AddCustomRecipe>\r\n\r\n            </div>\r\n\r\n            <div className=\"cards\">\r\n                { cardsRecipe }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FavoriteRecipes;","import App from \"./App\";\r\n\r\n\r\nexport default App;","import React from \"react\";\r\nimport './App.scss';\r\nimport Header from \"../header\";\r\nimport {\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\nimport RandomRecipe from \"../random-recipe\";\r\nimport FavoriteRecipes from \"../favorite-recipe\";\r\nimport {\r\n    isEmpty,\r\n    storage\r\n} from \"../helpers/helpers\";\r\n\r\nconst App = () => {\r\n\r\n    const renderCondition = () => {\r\n        if ( (isEmpty('meal') && JSON.parse( storage.getItem('meal') ).length !== 0) === true) {\r\n            return <FavoriteRecipes/>\r\n        } else {\r\n            return <Redirect to='/'/>\r\n        }\r\n    };\r\n\r\n    console.log(isEmpty() && JSON.parse(storage.getItem('meal')).length !== 0);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <div className=\"App\">\r\n                <Header/>\r\n\r\n                <main className='main-content'>\r\n                    <Switch>\r\n                        <Route\r\n                            path='/'\r\n                            render={() => <RandomRecipe/>}\r\n                            exact\r\n                        />\r\n\r\n                        <Route\r\n                            path='/favorite'\r\n                            exact\r\n                        >\r\n                            { renderCondition }\r\n                        </Route>\r\n                    </Switch>\r\n                </main>\r\n\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./component/app\";\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}